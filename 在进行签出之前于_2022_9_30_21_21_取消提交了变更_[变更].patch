Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	
+++ b/build.gradle	
@@ -4,4 +4,4 @@
     id 'com.android.library' version '7.3.0' apply false
     id 'org.jetbrains.kotlin.android' version '1.7.10' apply false
 
-}
\ No newline at end of file
+}
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	
+++ b/app/build.gradle	
@@ -1,6 +1,8 @@
+
 plugins {
     id 'com.android.application'
     id 'org.jetbrains.kotlin.android'
+
 }
 
 android {
@@ -38,6 +40,7 @@
     implementation 'androidx.appcompat:appcompat:1.4.1'
     implementation 'com.google.android.material:material:1.5.0'
     implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
+    //implementation 'com.android.support.constraint:constraint-layout:1.1.0'
     testImplementation 'junit:junit:4.13.2'
     androidTestImplementation 'androidx.test.ext:junit:1.1.3'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	
+++ b/.idea/gradle.xml	
@@ -7,6 +7,7 @@
         <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="gradleJvm" value="Android Studio java home" />
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$" />
Index: app/src/main/java/com/example/activitytest/RulerView.kt
===================================================================
diff --git a/app/src/main/java/com/example/activitytest/RulerView.kt b/app/src/main/java/com/example/activitytest/RulerView.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/example/activitytest/RulerView.kt	
@@ -0,0 +1,306 @@
+package com.example.activitytest
+
+import android.content.Context
+import android.content.res.TypedArray
+import android.graphics.Canvas
+import android.graphics.Color
+import android.graphics.Paint
+import android.util.AttributeSet
+import android.util.Log
+import android.view.MotionEvent
+import android.view.VelocityTracker
+import android.view.View
+import android.view.ViewConfiguration
+import android.widget.Scroller
+
+/**
+ * Created by juan on 2018/5/11.
+ */
+class RulerView: View {
+    private val TAG : String = "RulerView"
+
+    private var mMinVelocity:Int = 0
+    private var mScroller: Scroller? = null//Scroller是一个专门用于处理滚动效果的工具类   用mScroller记录/计算View滚动的位置，再重写View的computeScroll()，完成实际的滚动
+    private var mVelocityTracker: VelocityTracker?=null//主要用跟踪触摸屏事件（flinging事件和其他gestures手势事件）的速率。
+    private var mWidth:Int = 0
+    private var mHeight:Int = 0
+
+    private var mSelectorValue=50f      // 未选择时 默认的值 滑动后表示当前中间指针正在指着的值
+    private var mMaxValue=200f          // 最大数值
+    private var mMinValue=100f          //最小的数值
+    private var mPerValue=1f            //最小单位(如 1:表示每2条刻度差为1;0.1:表示每2条刻度差为0.1
+
+    private var mLineSpaceWidth = 5f    //  尺子刻度2条线之间的距离
+    private var mLineWidth = 4f         //  尺子刻度的宽度
+    private var mLineMaxHeight = 420f   //  尺子刻度分为3中不同的高度。 mLineMaxHeight表示最长的那根(也就是 10的倍数时的高度)
+    private var mLineMidHeight = 30f    //  mLineMidHeight  表示中间的高度(也就是 5  15 25 等时的高度)
+    private var mLineMinHeight = 17f    //  mLineMinHeight  表示最短的那个高度(也就是 1 2 3 4 等时的高度)
+
+    private var mTextMarginTop = 10f
+    private var mTextSize = 30f          //尺子刻度下方数字的大小
+    private var mAlphaEnable=false       // 尺子 最左边 最后边是否需要透明 `(透明效果更好点)
+    private var mTextHeight = 0.toFloat()//尺子刻度下方数字的高度
+    private var mTextPaint: Paint?=null   // 尺子刻度下方数字(也就是每隔10个出现的数值)画笔
+    private var mLinePaint: Paint?=null   //  尺子刻度线的画笔
+
+    private var mTotalLine:Int = 0       //共有多少条 刻度
+    private var mMaxOffset:Int = 0       //所有刻度 共有多长
+    private var mOffset:Float = 0.toFloat()// 默认状态下，mSelectorValue所在的位置  位于尺子总刻度的位置
+    private var mLastX:Int = 0
+    private var mMove: Int = 0
+    private lateinit var mListener: OnValueChangeListener// 滑动后数值回调
+
+    private var mLineColor:Int= Color.GRAY //刻度的颜色
+    private var mTextColor:Int= Color.BLACK//文字的颜色
+
+    constructor(mContext: Context) : this(mContext,null)
+
+    constructor(mContext: Context, attrs: AttributeSet?) : this(mContext, attrs!!,0)
+
+    constructor(mContext: Context, attrs: AttributeSet,defStyleAttr:Int) : super(mContext, attrs,defStyleAttr) {
+        init(mContext, attrs)
+    }
+
+    fun init(context: Context, attrs: AttributeSet){
+        Log.d(TAG, "init")
+        mScroller= Scroller(context)
+
+        this.mLineSpaceWidth=myfloat(25.0f)
+        this.mLineWidth=myfloat(2.0f)
+        this.mLineMaxHeight=myfloat(100.0f)
+        this.mLineMidHeight=myfloat(60.0f)
+        this.mLineMinHeight=myfloat(40.0f)
+        this.mTextHeight=myfloat(40.0f)
+
+        val typedArray: TypedArray =context.obtainStyledAttributes(attrs,
+                R.styleable.RulerView)
+
+        mAlphaEnable= typedArray.getBoolean(R.styleable.RulerView_alphaEnable, mAlphaEnable)
+
+        mLineSpaceWidth = typedArray.getDimension(R.styleable.RulerView_lineSpaceWidth, mLineSpaceWidth)
+        mLineWidth = typedArray.getDimension(R.styleable.RulerView_lineWidth, mLineWidth)
+        mLineMaxHeight = typedArray.getDimension(R.styleable.RulerView_lineMaxHeight, mLineMaxHeight)
+        mLineMidHeight = typedArray.getDimension(R.styleable.RulerView_lineMidHeight, mLineMidHeight)
+        mLineMinHeight = typedArray.getDimension(R.styleable.RulerView_lineMinHeight, mLineMinHeight)
+        mLineColor = typedArray.getColor(R.styleable.RulerView_lineColor, mLineColor)
+
+        mTextSize = typedArray.getDimension(R.styleable.RulerView_textSize, mTextSize)
+        mTextColor = typedArray.getColor(R.styleable.RulerView_textColor, mTextColor)
+        mTextMarginTop = typedArray.getDimension(R.styleable.RulerView_textMarginTop, mTextMarginTop)
+
+        mSelectorValue = typedArray.getFloat(R.styleable.RulerView_selectorValue, 0.0f)
+        mMinValue = typedArray.getFloat(R.styleable.RulerView_minValue, 0.0f)
+        mMaxValue = typedArray.getFloat(R.styleable.RulerView_maxValue, 100.0f)
+        mPerValue = typedArray.getFloat(R.styleable.RulerView_perValue, 0.1f)
+
+        mMinVelocity= ViewConfiguration.get(getContext()).scaledMinimumFlingVelocity
+
+        mTextPaint = Paint(Paint.ANTI_ALIAS_FLAG)
+        mTextPaint!!.textSize = mTextSize
+        mTextPaint!!.color = mTextColor
+        mTextHeight = getFontHeight(mTextPaint!!)
+
+        mLinePaint = Paint(Paint.ANTI_ALIAS_FLAG)
+        mLinePaint!!.strokeWidth = mLineWidth
+        mLinePaint!!.color = mLineColor
+    }
+
+    private fun myfloat(paramFloat:Float):Float{
+        return 0.5f+paramFloat*1.0f
+    }
+
+    private fun getFontHeight(paint: Paint):Float{
+        val fm = paint.fontMetrics
+        return fm.descent - fm.ascent
+    }
+
+    /**
+     * 设置默认的参数
+     * @param selectorValue 未选择时 默认的值 滑动后表示当前中间指针正在指着的值
+     * @param minValue   最大数值
+     * @param maxValue   最小的数值
+     * @param per   最小单位(如1:表示每2条刻度差为1;0.1:表示每2条刻度差为0.1;其中身高mPerValue为1,体重mPerValue 为0.1)
+     */
+    fun setValue(selectorValue: Float, minValue: Float, maxValue: Float, per: Float) {
+        this.mSelectorValue = selectorValue
+        this.mMaxValue = maxValue
+        this.mMinValue = minValue
+        this.mPerValue = per * 10.0f
+        this.mTotalLine = ((mMaxValue * 10 - mMinValue * 10) / mPerValue).toInt() + 1
+
+
+        mMaxOffset = (-(mTotalLine - 1) * mLineSpaceWidth).toInt()
+        mOffset = (mMinValue - mSelectorValue) / mPerValue * mLineSpaceWidth * 10f
+        Log.d(TAG, "mOffset:" + mOffset + ",mMaxOffset:" + mMaxOffset
+                + ",mTotalLine:" + mTotalLine)
+        invalidate()
+        visibility = View.VISIBLE
+    }
+
+    fun setOnValueChangeListener(listener: OnValueChangeListener) {
+        mListener = listener
+    }
+
+    override fun onSizeChanged(w: Int, h: Int, oldw: Int, oldh: Int) {
+
+        super.onSizeChanged(w, h, oldw, oldh)
+        if (w > 0 && h > 0) {
+            mWidth = w
+            mHeight = h
+        }
+    }
+
+    override fun onDraw(canvas: Canvas) {
+        super.onDraw(canvas)
+        var left: Float
+        var height: Float
+        var value: String
+        var alpha = 0
+        var scale: Float
+        val srcPointX = mWidth / 2
+        for (i in 0 until mTotalLine) {
+            left = srcPointX.toFloat() + mOffset + i * mLineSpaceWidth
+
+            if (left < 0 || left > mWidth) {
+                continue  //先画默认值在正中间，左右各一半的view。多余部分暂时不画(也就是从默认值在中间，画旁边左右的刻度线)
+            }
+
+            if (i % 10 == 0) {
+                height = mLineMaxHeight
+            } else if (i % 5 == 0) {
+                height = mLineMidHeight
+            } else {
+                height = mLineMinHeight
+            }
+            if (mAlphaEnable) {
+                scale = 1 - Math.abs(left - srcPointX) / srcPointX
+                alpha = (255f * scale * scale).toInt()
+
+                mLinePaint!!.setAlpha(alpha)
+            }
+            canvas.drawLine(left, 0f, left, height, mLinePaint!!)
+
+            if (i % 10 == 0) {
+                value = (mMinValue + i * mPerValue / 10).toInt().toString()
+                if (mAlphaEnable) {
+                    mTextPaint!!.alpha = alpha
+                }
+                canvas.drawText(value, left - mTextPaint!!.measureText(value) / 2,
+                        height + mTextMarginTop + mTextHeight, mTextPaint!!)    // 在为整数时,画 数值
+            }
+        }
+    }
+
+    override fun onTouchEvent(event: MotionEvent): Boolean {
+        Log.d(TAG, "onTouchEvent")
+
+        val action = event.action
+        val xPosition = event.x.toInt()
+
+        if (mVelocityTracker == null) {
+            mVelocityTracker = VelocityTracker.obtain()
+        }
+        mVelocityTracker!!.addMovement(event)
+
+        when (action) {
+            MotionEvent.ACTION_DOWN -> {
+                mScroller!!.forceFinished(true)
+                mLastX = xPosition
+                mMove = 0
+            }
+            MotionEvent.ACTION_MOVE -> {
+                mMove = mLastX - xPosition
+                changeMoveAndValue()
+            }
+            MotionEvent.ACTION_UP, MotionEvent.ACTION_CANCEL -> {
+                countMoveEnd()
+                countVelocityTracker()
+                return false
+            }
+            else -> {
+            }
+        }
+
+        mLastX = xPosition
+        return true
+    }
+
+    private fun countVelocityTracker() {
+        Log.d(TAG, "countVelocityTracker")
+        mVelocityTracker!!.computeCurrentVelocity(1000)  //初始化速率的单位
+        val xVelocity = mVelocityTracker!!.xVelocity //当前的速度
+        if (Math.abs(xVelocity) > mMinVelocity) {
+            mScroller!!.fling(0, 0, xVelocity.toInt(), 0, Integer.MIN_VALUE, Integer.MAX_VALUE, 0, 0)
+        }
+    }
+
+    /**
+     * 滑动结束后，若是指针在2条刻度之间时，改变mOffset 让指针正好在刻度上。
+     */
+    private fun countMoveEnd() {
+        mOffset -= mMove.toFloat()
+        if (mOffset <= mMaxOffset) {
+            mOffset = mMaxOffset.toFloat()
+        } else if (mOffset >= 0) {
+            mOffset = 0f
+        }
+
+        mLastX = 0
+        mMove = 0
+
+        mSelectorValue = mMinValue + Math.round(Math.abs(mOffset) * 1.0f / mLineSpaceWidth) * mPerValue / 10.0f
+        mOffset = (mMinValue - mSelectorValue) * 10.0f / mPerValue * mLineSpaceWidth
+
+        notifyValueChange()
+        postInvalidate()
+    }
+
+    /**
+     * 滑动后的操作
+     */
+    private fun changeMoveAndValue() {
+        mOffset -= mMove.toFloat()
+
+        if (mOffset <= mMaxOffset) {
+            mOffset = mMaxOffset.toFloat()
+            mMove = 0
+            mScroller!!.forceFinished(true)
+        } else if (mOffset >= 0) {
+            mMove = 0
+            mScroller!!.forceFinished(true)
+        }
+        mSelectorValue = mMinValue + Math.round(Math.abs(mOffset) * 1.0f / mLineSpaceWidth) * mPerValue / 10.0f
+
+
+        notifyValueChange()
+        postInvalidate()
+    }
+
+    private fun notifyValueChange() {
+        if (null != mListener) {
+            mListener.onValueChange(mSelectorValue)
+        }
+    }
+
+    /**
+     * 滑动后的回调
+     */
+    interface OnValueChangeListener{
+        fun onValueChange(value: Float)
+    }
+
+    override fun computeScroll() {
+        Log.d(TAG, "computeScroll")
+        super.computeScroll()
+        if (mScroller!!.computeScrollOffset()) {//mScroller.computeScrollOffset()返回true表示滑动还没有结束
+            if (mScroller!!.currX == mScroller!!.finalX) {
+                countMoveEnd()
+            } else {
+                val xPosition = mScroller!!.currX
+                mMove = mLastX - xPosition
+                changeMoveAndValue()
+                mLastX = xPosition
+            }
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/activity_main.xml	
@@ -0,0 +1,142 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <Button
+        android:id="@+id/close_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Quit"
+    />
+
+    <TextView
+        android:id="@+id/tv_weight_tip"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="体重"
+        android:textColor="@android:color/black"
+        android:textSize="14dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintRight_toRightOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.132" />
+    <RelativeLayout
+        android:id="@+id/rl_weight_ruler"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:layout_constraintTop_toBottomOf="@+id/tv_weight_tip"
+        app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintRight_toRightOf="parent">
+
+        <com.example.activitytest.RulerView
+            android:id="@+id/ruler_weight"
+            android:layout_width="match_parent"
+            android:layout_height="58dp"
+            android:layout_marginTop="24dp"
+            app:alphaEnable="true"
+            app:lineColor="@android:color/darker_gray"
+            app:lineMaxHeight="40dp"
+            app:lineMidHeight="30dp"
+            app:lineMinHeight="20dp"
+            app:lineSpaceWidth="10dp"
+            app:lineWidth="2.5dp"
+            app:textColor="@android:color/black"
+            app:minValue="20"
+            app:maxValue="200"
+            app:perValue="0.1"
+            app:selectorValue="55"/>
+
+        <ImageView
+            android:layout_width="14dp"
+            android:layout_height="46dp"
+            android:layout_centerHorizontal="true"
+            android:layout_marginTop="6dp"
+            android:scaleType="fitXY"
+            android:src="@mipmap/ic_arrow"/>
+    </RelativeLayout>
+
+    <TextView
+        android:id="@+id/tv_weight"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="11dp"
+        android:maxHeight="30sp"
+        android:textColor="@color/colorPrimary"
+        android:textSize="24sp"
+        app:layout_constraintTop_toBottomOf="@+id/rl_weight_ruler"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"/>
+
+    <View
+        android:id="@+id/view"
+        android:layout_width="match_parent"
+        android:layout_height="2dp"
+        android:layout_marginBottom="5dp"
+        android:layout_marginTop="5dp"
+        android:background="@android:color/darker_gray"
+        app:layout_constraintTop_toBottomOf="@+id/tv_weight"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"/>
+
+    <TextView
+        android:id="@+id/tv_height_tip"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="10dp"
+        android:text="身高"
+        android:textColor="@android:color/black"
+        android:textSize="14dp"
+        app:layout_constraintTop_toBottomOf="@+id/view"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"/>
+
+    <RelativeLayout
+        android:id="@+id/rl_height"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:layout_constraintTop_toBottomOf="@+id/tv_height_tip"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent">
+
+        <com.example.activitytest.RulerView
+            android:id="@+id/ruler_height"
+            android:layout_width="match_parent"
+            android:layout_height="58dp"
+            android:layout_marginTop="24dp"
+            app:alphaEnable="true"
+            app:lineColor="@android:color/darker_gray"
+            app:lineMaxHeight="40dp"
+            app:lineMidHeight="30dp"
+            app:lineMinHeight="20dp"
+            app:lineSpaceWidth="10dp"
+            app:lineWidth="2.5dp"
+            app:textColor="@android:color/black"
+            app:minValue="80"
+            app:maxValue="250"
+            app:perValue="1"
+            app:selectorValue="165"/>
+
+        <ImageView
+            android:layout_width="14dp"
+            android:layout_height="46dp"
+            android:layout_centerHorizontal="true"
+            android:layout_marginTop="11dp"
+            android:scaleType="fitXY"
+            android:src="@mipmap/ic_arrow"/>
+    </RelativeLayout>
+    <TextView
+        android:id="@+id/tv_height"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="11dp"
+        android:maxHeight="30sp"
+        android:textColor="@color/colorPrimary"
+        android:textSize="24sp"
+        app:layout_constraintTop_toBottomOf="@+id/rl_height"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"/>
+</androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/res/values/attrs.xml
===================================================================
diff --git a/app/src/main/res/values/attrs.xml b/app/src/main/res/values/attrs.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/values/attrs.xml	
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <declare-styleable name="RulerView">
+        <attr name="textColor" format="color" />
+        <attr name="textSize" format="dimension" />
+        <attr name="lineColor" format="color" />
+        <attr name="lineSpaceWidth" format="dimension" />
+        <attr name="lineWidth" format="dimension" />
+        <attr name="lineMaxHeight" format="dimension" />
+        <attr name="lineMidHeight" format="dimension" />
+        <attr name="lineMinHeight" format="dimension" />
+        <attr name="textMarginTop" format="dimension" />
+        <attr name="alphaEnable" format="boolean" />
+        <attr name="minValue" format="float"/>
+        <attr name="maxValue" format="float"/>
+        <attr name="selectorValue" format="float"/>
+        <attr name="perValue" format="float"/>
+    </declare-styleable>
+
+</resources>
\ No newline at end of file
Index: .idea/deploymentTargetDropDown.xml
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/deploymentTargetDropDown.xml	
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="deploymentTargetDropDown">
+    <targetSelectedWithDropDown>
+      <Target>
+        <type value="QUICK_BOOT_TARGET" />
+        <deviceKey>
+          <Key>
+            <type value="VIRTUAL_DEVICE_PATH" />
+            <value value="D:\Android_E\Pixel_6_API_33.avd" />
+          </Key>
+        </deviceKey>
+      </Target>
+    </targetSelectedWithDropDown>
+    <timeTargetWasSelectedWithDropDown value="2022-09-30T11:36:21.499074800Z" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
--- a/app/src/main/res/values/themes.xml	
+++ b/app/src/main/res/values/themes.xml	
@@ -12,5 +12,8 @@
         <!-- Status bar color. -->
         <item name="android:statusBarColor">?attr/colorPrimaryVariant</item>
         <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
     </style>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
--- a/app/src/main/res/values/colors.xml	
+++ b/app/src/main/res/values/colors.xml	
@@ -7,4 +7,7 @@
     <color name="teal_700">#FF018786</color>
     <color name="black">#FF000000</color>
     <color name="white">#FFFFFFFF</color>
+    <color name="colorPrimary">#3F51B5</color>
+    <color name="colorPrimaryDark">#303F9F</color>
+    <color name="colorAccent">#FF4081</color>
 </resources>
\ No newline at end of file
Index: app/src/debug/res/mipmap-anydpi-v26/myicon4.xml
===================================================================
diff --git a/app/src/debug/res/mipmap-anydpi-v26/myicon4.xml b/app/src/debug/res/mipmap-anydpi-v26/myicon4.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/debug/res/mipmap-anydpi-v26/myicon4.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@drawable/myicon4_background"/>
+    <foreground android:drawable="@mipmap/myicon4_foreground"/>
+</adaptive-icon>
\ No newline at end of file
Index: app/src/debug/res/drawable/myicon4_background.xml
===================================================================
diff --git a/app/src/debug/res/drawable/myicon4_background.xml b/app/src/debug/res/drawable/myicon4_background.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/debug/res/drawable/myicon4_background.xml	
@@ -0,0 +1,74 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector
+    android:height="108dp"
+    android:width="108dp"
+    android:viewportHeight="108"
+    android:viewportWidth="108"
+    xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#3DDC84"
+          android:pathData="M0,0h108v108h-108z"/>
+    <path android:fillColor="#00000000" android:pathData="M9,0L9,108"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M19,0L19,108"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M29,0L29,108"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M39,0L39,108"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M49,0L49,108"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M59,0L59,108"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M69,0L69,108"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M79,0L79,108"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M89,0L89,108"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M99,0L99,108"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M0,9L108,9"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M0,19L108,19"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M0,29L108,29"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M0,39L108,39"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M0,49L108,49"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M0,59L108,59"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M0,69L108,69"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M0,79L108,79"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M0,89L108,89"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M0,99L108,99"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M19,29L89,29"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M19,39L89,39"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M19,49L89,49"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M19,59L89,59"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M19,69L89,69"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M19,79L89,79"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M29,19L29,89"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M39,19L39,89"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M49,19L49,89"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M59,19L59,89"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M69,19L69,89"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+    <path android:fillColor="#00000000" android:pathData="M79,19L79,89"
+          android:strokeColor="#33FFFFFF" android:strokeWidth="0.8"/>
+</vector>
Index: app/src/debug/res/mipmap-anydpi-v26/myicon4_round.xml
===================================================================
diff --git a/app/src/debug/res/mipmap-anydpi-v26/myicon4_round.xml b/app/src/debug/res/mipmap-anydpi-v26/myicon4_round.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/debug/res/mipmap-anydpi-v26/myicon4_round.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@drawable/myicon4_background"/>
+    <foreground android:drawable="@mipmap/myicon4_foreground"/>
+</adaptive-icon>
\ No newline at end of file
Index: app/src/main/java/com/example/activitytest/CountActivity.kt
===================================================================
diff --git a/app/src/main/java/com/example/activitytest/CountActivity.kt b/app/src/main/java/com/example/activitytest/CountActivity.kt
--- a/app/src/main/java/com/example/activitytest/CountActivity.kt	
+++ b/app/src/main/java/com/example/activitytest/CountActivity.kt	
@@ -4,13 +4,51 @@
 import android.os.Bundle
 import android.view.Menu
 import android.widget.Button
+import android.widget.TextView
 import android.widget.Toast
 
 class CountActivity : AppCompatActivity() {
-    override fun onCreate(savedInstanceState: Bundle?) {
+    private var mWeightRuler: RulerView? = null
+    private var mHeightRuler: RulerView? = null
+    private var mTvWeight: TextView? = null
+    private var mTvHeight: TextView? = null
+    private var weight: Float = 55f
+    private var height: Int = 165
+
+    override fun onCreate(savedInstanceState: Bundle?)
+    {
         super.onCreate(savedInstanceState)
-        setContentView(R.layout.count_layout)
-        val button1: Button = findViewById(R.id.button1)
+        setContentView(R.layout.activity_main)
+        val close_button:Button=findViewById(R.id.close_button)
+        close_button.setOnClickListener {
+            finish()
+        }
+
+        mWeightRuler = findViewById(R.id.ruler_weight)
+        mHeightRuler = findViewById(R.id.ruler_height)
+        mTvWeight= findViewById(R.id.tv_weight)
+        mTvHeight= findViewById(R.id.tv_height)
+        //体重的view
+        mWeightRuler!!.setOnValueChangeListener(object : RulerView.OnValueChangeListener {
+            override fun onValueChange(value: Float) {
+                weight = value
+                mTvWeight!!.text = weight.toString() + "kg"
+            }
+        })
+        mWeightRuler!!.setValue(55f, 20f, 200f, 0.1f)
+        mTvWeight!!.text = weight.toString() + "kg"
+
+        //身高的view
+        mHeightRuler!!.setOnValueChangeListener(object : RulerView.OnValueChangeListener {
+            override fun onValueChange(value: Float) {
+                height = value.toInt()
+                mTvHeight!!.text = height.toString() + "cm"
+            }
+        })
+        mHeightRuler!!.setValue(165f, 80f, 250f, 1f)
+        mTvHeight!!.text = height.toString() + "cm"
+    }
+        /*val button1: Button = findViewById(R.id.button1)
         val close_button:Button=findViewById(R.id.close_button)
 
         button1.setOnClickListener {
@@ -26,4 +64,6 @@
         menuInflater.inflate(R.menu.count,menu)
         return true
     }
+
+     */
 }
\ No newline at end of file
Index: app/src/main/res/layout/count_layout.xml
===================================================================
diff --git a/app/src/main/res/layout/count_layout.xml b/app/src/main/res/layout/count_layout.xml
--- a/app/src/main/res/layout/count_layout.xml	
+++ b/app/src/main/res/layout/count_layout.xml	
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     android:orientation="vertical"
     android:layout_width="match_parent"
     android:layout_height="match_parent">
@@ -19,4 +20,6 @@
         android:text="Button 1"
 
         />
+
+
 </LinearLayout>
\ No newline at end of file
