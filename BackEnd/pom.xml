<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>org.example</groupId>
	<artifactId>BackEnd</artifactId>
	<packaging>jar</packaging>
	<version>1.0</version>
	<!-- TODO project name  -->
	<name>quickstart</name>
	<description></description>

	<!-- TODO
		<organization>
		<name>company name</name>
		<url>company url</url>
		</organization>
	-->

	<!-- 1、引入SpringBoot相关的依赖 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<dependencies>
		<!--  WICKET DEPENDENCIES -->

		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket</artifactId>
			<version>${wicket.version}</version>
		</dependency>

		<!-- 2、 引入SpringBoot的依赖包 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- 3、 引入的第三个：java连接mysql的connector的jar包 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!-- 4、引入的第四个：阿里的德鲁伊连接池，管理mysql连接的jar包 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.2.13-SNSAPSHOT</version>
		</dependency>
		<!-- 5、引入的第五个：Mybatis相关的jar包 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.2.2</version>
		</dependency>
		<!-- 6.Apache common lang -->
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.2.4.Final</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>
		<!-- OPTIONAL 
			<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-extensions</artifactId>
			<version>${wicket.version}</version>
			</dependency>
		-->

		<!-- LOGGING DEPENDENCIES - LOG4J -->

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>

		<!--  JUNIT DEPENDENCY FOR TESTING -->
		 <dependency>
				 <groupId>junit</groupId>
				 <artifactId>junit</artifactId>
			 <scope>test</scope>
		 </dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>false</filtering>
				<directory>src/test/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>
		<plugins>

			<!-- 声明主函数 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>2.7.4</version>
				<configuration>
					<mainClass>org.example.App</mainClass>
				</configuration>
			</plugin>

			<plugin>
				<!-- 引入mybatis的plugin -->
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.5</version>

				<dependencies>
					<!-- 7、 第七个引入的：mybatis生成器的core相关jar包  -->
					<dependency>
						<groupId>org.mybatis.generator</groupId>
						<artifactId>mybatis-generator-core</artifactId>
						<version>1.3.5</version>
					</dependency>
					<!-- 8、 在mybatis的插件里再引入一遍mysql的连接jar包 -->
					<!-- 上面曾经引入过，是服务端java代码与mysql连接 -->
					<!-- 这里再次声明，是mybatis插件和mysql连接 -->
					<!-- 虽说老师这么写了， 但我个人觉得没必要重复引入jar包啊 -->
					<!-- 老师给出的解释是：要生成的mybatis插件，需要借助相关的依赖 -->
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>8.0.21</version>
					</dependency>
				</dependencies>

				<!-- executions : 执行-->
				<!-- 9、配置mybatis generator 插件的执行阶段phase以及执行目的goal -->
				<executions>
					<execution>
						<id>mybatis generator</id>
						<phase>deploy</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>

				<!-- 10、mybatis generator 插件的相关属性配置 -->
				<configuration>
					<!-- verbose : 冗余的 ， 允许移动生成的文件 -->
					<verbose>true</verbose>
					<!-- 本来是新生成的覆盖旧生成的，实际工作中慎用 -->
					<!-- 添加菜品表后此处已经改成了不允许覆盖-->
					<overwrite>false</overwrite>
					<!-- 指定mybatis配置文件的路径 -->
					<configurationFile>src/main/resources/mybatis-generator.xml</configurationFile>
				</configuration>

			</plugin>

		</plugins>
	</build>

	<properties>
		<wicket.version>1.3.2</wicket.version>
	</properties>

</project>
